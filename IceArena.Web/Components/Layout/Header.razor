@using Blazored.LocalStorage
@using IceArena.Web.Components.Modal
@using Microsoft.AspNetCore.Components.Authorization
@rendermode InteractiveServer
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<header>
    <nav>
        @if (!isInitialized)
        {
            <p>Загрузка...</p>
        }
        else
        {
            @if (role == "admin")
            {
                <HeaderAdmin/>
            }
            else
            {
                <UserHeader />
            }
        }
    </nav>

    @if (isInitialized)
    {
        @if (isAuthenticated)
        {
            <button class="vhodavtor" @onclick="ConfirmLogout">Выйти</button>
            <label>@name</label>
        }
        else
        {
            <button class="vhodavtor" @onclick="OpenLoginModal">Войти</button>
        }
    }

    <LoginModel IsOpen="@isLoginOpen" IsOpenChanged="@((value) => isLoginOpen = value)" />
    <OutModel IsOpenLogout="@showLogoutConfirm" IsOpenChangedLogout="@((value) => showLogoutConfirm = value)" />
</header>

@code {
}
