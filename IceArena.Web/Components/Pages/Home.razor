@page "/"
@rendermode InteractiveServer
@using Blazored.LocalStorage
@using IceArena.Web.Interfaces
@using IceArena.Web.Models
@using IceArena.Web.Services
@inject IMatchServiceee MatchService
@inject IJSRuntime JSRuntime
@using IceArena.Web.Components.Modal
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage

<div class="carousel-container">
    <div class="carousel">
        <div class="arrow left">&lt;</div>
        <img src="images/ledoviy.jpg" alt="Картинка">
        <div class="arrow right">&gt;</div>
    </div>
    <div class="carousel-text">
        <h2 class="glavtext">Добро пожаловать в Ледовый Дворец!</h2>
        <p class="secondtext">Лучшее место для отдыха и спорта</p>
    </div>
</div>

<h3 class="zagolovki">Список матчей</h3>

@if (matches == null)
{
    <p>Загрузка...</p>
}
else
{
    <div class="matchesdiv">
        <table class="match-table">
            <thead>
                <tr>
                    <th>Дата</th>
                    <th>Команда 1</th>
                    <th>Команда 2</th>
                    <th>Место проведения</th>
                    <th>Статус</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var match in matches)
                {
                    <tr>
                        <td>@match.MatchDate?.ToString("dd.MM.yyyy HH:mm")</td>
                        <td>@match.Team1Name</td>
                        <td>@match.Team1Name</td>
                        <td>@(match.Location ?? "Не указано")</td>
                        <td>@(match.Result ?? "Планируется")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<div class="carousel-container2">
    <div class="carousel2">
        <div class="arrow left">&lt;</div>
        <img src="images/ledoviy.jpg" alt="Картинка">
        <div class="arrow right">&gt;</div>
    </div>
    <div class="carousel-text">
        <h2 class="glavtext">Главные новости</h2>
    </div>
</div>

<div class="news">
    <p>Следите за последними новостями и событиями!</p>
</div>

@code {
 private List<MatchDto>? matches;

    protected override async Task OnInitializedAsync()
    {
        matches = await MatchService.GetMatchesAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                await JSRuntime.InvokeVoidAsync("initializeCarousel");
            }
            catch (JSException ex)
            {
                Console.WriteLine($"Error initializing carousel: {ex.Message}");
            }
        }
    }
}